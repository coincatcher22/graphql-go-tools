// Code generated by "stringer -type=OperationType,ValueKind,TypeKind,SelectionKind,NodeKind -output ast_string.go"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OperationTypeUnknown-0]
	_ = x[OperationTypeQuery-1]
	_ = x[OperationTypeMutation-2]
	_ = x[OperationTypeSubscription-3]
}

const _OperationType_name = "OperationTypeUnknownOperationTypeQueryOperationTypeMutationOperationTypeSubscription"

var _OperationType_index = [...]uint8{0, 20, 38, 59, 84}

func (i OperationType) String() string {
	if i < 0 || i >= OperationType(len(_OperationType_index)-1) {
		return "OperationType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OperationType_name[_OperationType_index[i]:_OperationType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ValueKindUnknown-4]
	_ = x[ValueKindString-5]
	_ = x[ValueKindBoolean-6]
	_ = x[ValueKindInteger-7]
	_ = x[ValueKindFloat-8]
	_ = x[ValueKindVariable-9]
	_ = x[ValueKindNull-10]
	_ = x[ValueKindList-11]
	_ = x[ValueKindObject-12]
	_ = x[ValueKindEnum-13]
}

const _ValueKind_name = "ValueKindUnknownValueKindStringValueKindBooleanValueKindIntegerValueKindFloatValueKindVariableValueKindNullValueKindListValueKindObjectValueKindEnum"

var _ValueKind_index = [...]uint8{0, 16, 31, 47, 63, 77, 94, 107, 120, 135, 148}

func (i ValueKind) String() string {
	i -= 4
	if i < 0 || i >= ValueKind(len(_ValueKind_index)-1) {
		return "ValueKind(" + strconv.FormatInt(int64(i+4), 10) + ")"
	}
	return _ValueKind_name[_ValueKind_index[i]:_ValueKind_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TypeKindUnknown-14]
	_ = x[TypeKindNamed-15]
	_ = x[TypeKindList-16]
	_ = x[TypeKindNonNull-17]
}

const _TypeKind_name = "TypeKindUnknownTypeKindNamedTypeKindListTypeKindNonNull"

var _TypeKind_index = [...]uint8{0, 15, 28, 40, 55}

func (i TypeKind) String() string {
	i -= 14
	if i < 0 || i >= TypeKind(len(_TypeKind_index)-1) {
		return "TypeKind(" + strconv.FormatInt(int64(i+14), 10) + ")"
	}
	return _TypeKind_name[_TypeKind_index[i]:_TypeKind_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SelectionKindUnknown-18]
	_ = x[SelectionKindField-19]
	_ = x[SelectionKindFragmentSpread-20]
	_ = x[SelectionKindInlineFragment-21]
}

const _SelectionKind_name = "SelectionKindUnknownSelectionKindFieldSelectionKindFragmentSpreadSelectionKindInlineFragment"

var _SelectionKind_index = [...]uint8{0, 20, 38, 65, 92}

func (i SelectionKind) String() string {
	i -= 18
	if i < 0 || i >= SelectionKind(len(_SelectionKind_index)-1) {
		return "SelectionKind(" + strconv.FormatInt(int64(i+18), 10) + ")"
	}
	return _SelectionKind_name[_SelectionKind_index[i]:_SelectionKind_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeKindUnknown-22]
	_ = x[NodeKindSchemaDefinition-23]
	_ = x[NodeKindSchemaExtension-24]
	_ = x[NodeKindObjectTypeDefinition-25]
	_ = x[NodeKindObjectTypeExtension-26]
	_ = x[NodeKindInterfaceTypeDefinition-27]
	_ = x[NodeKindInterfaceTypeExtension-28]
	_ = x[NodeKindUnionTypeDefinition-29]
	_ = x[NodeKindUnionTypeExtension-30]
	_ = x[NodeKindEnumTypeDefinition-31]
	_ = x[NodeKindEnumTypeExtension-32]
	_ = x[NodeKindInputObjectTypeDefinition-33]
	_ = x[NodeKindInputValueDefinition-34]
	_ = x[NodeKindInputObjectTypeExtension-35]
	_ = x[NodeKindScalarTypeDefinition-36]
	_ = x[NodeKindDirectiveDefinition-37]
	_ = x[NodeKindOperationDefinition-38]
	_ = x[NodeKindSelectionSet-39]
	_ = x[NodeKindField-40]
	_ = x[NodeKindFragmentSpread-41]
	_ = x[NodeKindInlineFragment-42]
	_ = x[NodeKindFragmentDefinition-43]
	_ = x[NodeKindArgument-44]
	_ = x[NodeKindDirective-45]
	_ = x[NodeKindVariableDefinition-46]
}

const _NodeKind_name = "NodeKindUnknownNodeKindSchemaDefinitionNodeKindSchemaExtensionNodeKindObjectTypeDefinitionNodeKindObjectTypeExtensionNodeKindInterfaceTypeDefinitionNodeKindInterfaceTypeExtensionNodeKindUnionTypeDefinitionNodeKindUnionTypeExtensionNodeKindEnumTypeDefinitionNodeKindEnumTypeExtensionNodeKindInputObjectTypeDefinitionNodeKindInputValueDefinitionNodeKindInputObjectTypeExtensionNodeKindScalarTypeDefinitionNodeKindDirectiveDefinitionNodeKindOperationDefinitionNodeKindSelectionSetNodeKindFieldNodeKindFragmentSpreadNodeKindInlineFragmentNodeKindFragmentDefinitionNodeKindArgumentNodeKindDirectiveNodeKindVariableDefinition"

var _NodeKind_index = [...]uint16{0, 15, 39, 62, 90, 117, 148, 178, 205, 231, 257, 282, 315, 343, 375, 403, 430, 457, 477, 490, 512, 534, 560, 576, 593, 619}

func (i NodeKind) String() string {
	i -= 22
	if i < 0 || i >= NodeKind(len(_NodeKind_index)-1) {
		return "NodeKind(" + strconv.FormatInt(int64(i+22), 10) + ")"
	}
	return _NodeKind_name[_NodeKind_index[i]:_NodeKind_index[i+1]]
}
