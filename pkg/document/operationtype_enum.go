// Code generated by go-enum
// DO NOT EDIT!

package document

import (
	"fmt"
)

const (
	// OperationTypeQuery is a OperationType of type Query
	OperationTypeQuery OperationType = iota
	// OperationTypeMutation is a OperationType of type Mutation
	OperationTypeMutation
	// OperationTypeSubscription is a OperationType of type Subscription
	OperationTypeSubscription
)

const _OperationTypeName = "querymutationsubscription"

var _OperationTypeMap = map[OperationType]string{
	0: _OperationTypeName[0:5],
	1: _OperationTypeName[5:13],
	2: _OperationTypeName[13:25],
}

// String implements the Stringer interface.
func (x OperationType) String() string {
	if str, ok := _OperationTypeMap[x]; ok {
		return str
	}
	return fmt.Sprintf("OperationType(%d)", x)
}

var _OperationTypeValue = map[string]OperationType{
	_OperationTypeName[0:5]:   0,
	_OperationTypeName[5:13]:  1,
	_OperationTypeName[13:25]: 2,
}

// ParseOperationType attempts to convert a string to a OperationType
func ParseOperationType(name string) (OperationType, error) {
	if x, ok := _OperationTypeValue[name]; ok {
		return x, nil
	}
	return OperationType(0), fmt.Errorf("%s is not a valid OperationType", name)
}
